plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 34
    File file = getRootProject().file("local.properties")
    Properties properties = new Properties()
    properties.load(new FileInputStream(file))


    defaultConfig {
        applicationId "com.ptit.signlanguage"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "2.1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            try {
                minifyEnabled false
                buildConfigField("String", "API_URL", "\"http://113.22.56.109:8089/\"")
                buildConfigField("String", "API_GEMINI", properties.getProperty("apiGeminiAPIKey"))
                debuggable true
            } catch(e) {
                throw e
            }
        }
        release {
            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all{
            variant ->
                variant.outputs.each{
                    output->
                        project.ext { appName = 'SignLanguage' }
                        def newName = appName + "_v" + versionName + ".apk"
                        output.outputFileName  = newName
                }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = true
        buildConfig = true
    }
    namespace 'com.ptit.signlanguage'
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // retrofit
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'
    implementation 'com.squareup.retrofit2:retrofit:2.11.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'

    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0")
    // ViewModel utilities for Compose
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0")
//    implementation 'androidx.fragment:fragment-ktx:1.6.0-alpha01'

    // glide
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'

    // roundedimageview
    implementation 'com.makeramen:roundedimageview:2.3.0'

    // recyclerview
    implementation("androidx.recyclerview:recyclerview:1.3.2")

    implementation 'com.github.ome450901:SimpleRatingBar:1.5.1'

    implementation("androidx.cardview:cardview:1.0.0")

    def media3_version = "1.1.1"

    // For media playback using ExoPlayer
    implementation "androidx.media3:media3-exoplayer:$media3_version"

    // For DASH playback support with ExoPlayer
    implementation "androidx.media3:media3-exoplayer-dash:$media3_version"

    // For building media playback UIs
    implementation "androidx.media3:media3-ui:$media3_version"

    // CameraX
    def camerax_version = "1.3.2"
    implementation("androidx.camera:camera-core:${camerax_version}")
    implementation("androidx.camera:camera-camera2:${camerax_version}")
    implementation("androidx.camera:camera-lifecycle:${camerax_version}")
    implementation("androidx.camera:camera-video:${camerax_version}")
    implementation("androidx.camera:camera-view:${camerax_version}")
    implementation("androidx.camera:camera-extensions:${camerax_version}")
    //Lottie Animation
    implementation 'com.airbnb.android:lottie:6.4.1'
    // Gemini
    implementation("com.google.ai.client.generativeai:generativeai:0.9.0")
}